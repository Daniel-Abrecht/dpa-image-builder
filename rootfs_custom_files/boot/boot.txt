# Derived from: https://source.puri.sm/Librem5/image-builder/blob/d421431f87bd0a4da987bc33746fc382b45d811a/data/boot-imx8.txt.in

setenv initrd_high 0xffffffff
a_script=0x80800000
a_image=0x80800000
a_fdt=0x83000000
a_initramfs=0x83a00000

if itest.s "x${dtbname}"   == "x"; then dtbname=devicetree; fi
if itest.s "x${bootpart}"  == "x"; then bootpart="${mmcpart}"; fi
if itest.s "x${bootpart}"  == "x"; then bootpart=2; fi
if itest.s "x${bootdir}"   == "x"; then bootdir=/; fi
if itest.s "x${console}"   == "x"; then console=ttymxc0; fi
if itest.s "x${dtype}"     == "x"; then dtype=mmc; fi
if itest.s "x${rfspart}"   == "x"; then rfspart=3; fi
if itest.s "x${disk}"      == "x"; then disk="${mmcdev}"; fi
if itest.s "x${disk}"      == "x"; then disk=0; fi
if itest.s "x${root}"      == "x"; then root="/dev/mmcblk${disk}p${rfspart}"; fi
if itest.s "x${kernel}"    == "x"; then kernel=vmlinux; fi
if itest.s "x${initramfs}" == "x"; then initramfs=initramfs; fi
if itest.s "x${cma}"       == "x"; then cma=256M; fi
if itest.s "x${vmalloc}"   == "x"; then vmalloc=400M; fi

if ext2load "${dtype}" "${disk}:${bootpart}" "${a_script}" "uEnv.txt"
then
  env import -t "${a_script}" "${filesize}"
fi

if ext2load "${dtype}" "${disk}:${bootpart}" "${a_fdt}" "${bootdir}${dtbname}"; then
  fdt addr "${a_fdt}"
  setenv fdt_high 0xffffffff
else
  echo "!!!! Error loading ${bootdir}${dtbname}";
  exit;
fi

fdt resize

if itest.s "x" != "x${cmd_custom}"
then
  run cmd_custom
fi

# TODO: use UUID + GPT
if itest.s "x" == "x${root}"; then
	part uuid ${dtype} ${disk}:${rfspart} uuid
	if itest.s "x" != "x${uuid}"; then
		root=PARTUUID=${uuid}
	elif test "sata" = "${dtype}" || test "usb" = "${dtype}" ; then
		root=/dev/sda${rfspart}
	else
		root=/dev/mmcblk${disk}p${rfspart}
	fi
fi

if itest.s "x" != "x$show_fdt"
then
  fdt print /
fi

if itest.s "x" != "x$show_env"
then
  printenv
fi

if itest.s "x$noinitramfs" == "x"
then
  if ext2load "${dtype}" "${disk}:${bootpart}" "${a_initramfs}" "${bootdir}${initramfs}"
  then
    setenv bootargs "$bootargs initrd=${a_initramfs},0x${filesize}"
  fi
fi

setenv bootargs "$bootargs console=${console},115200 vmalloc=${vmalloc}"
setenv bootargs "$bootargs cma=${cma} consoleblank=0 root=${root} rootwait"

if ext2load "${dtype}" "${disk}:${bootpart}" "${a_image}" "${bootdir}${kernel}"
then
  booti "${a_image}" - "${a_fdt}"
fi
echo "Error loading kernel image"
